conf {
  configType = "conf"
  file = "runtime.conf"
}

// basic, email, ldap, github, google, facebook, totp
modulesEnabled = "testModule1, testModule2,,testModule3"

database {
  type = "DBTYPE"

  mongo {
    uri = "URI"
    collection = "COLLECTION"
  }
}

jwt {
  example {
    expirationTime = "1d"
    algorithm = "HS256"
    secret = "secret"
    privateKey = "private"
    publicKey = "public"
  }
}

callback {
  success = "url?t=<<TOKEN>>&rt=<<REFRESH_TOKEN>>"
  failure = "url?e=<<ERROR>>"
}

hook {
  baseUrl = "https://backend/hook"

  authType = "basic"

  basicAuth {
    username = "user"
    password = "pass"
  }
}

tracer {
  client = "off"
}

oauth2 {
  rootUrl = "https://lvh.me:9443"

  github {
    clientId = "clientId"
    clientSecret = "clientSecret"
    scopes = "read:user"
  }

  google {
    clientId = "clientId"
    clientSecret = "clientSecret"
    scopes = "openid,email,profile"
  }

  facebook {
    clientId = "clientId"
    clientSecret = "clientSecret"
    scopes = "public_profile"
  }
}

ldap {
  url = "ldap://1.2.3.4:389"
  readonlyUserWithNamespace = "cn=readonly,dc=example,dc=com"
  readonlyUserPassword = "readonlypw"
  userSearchBaseDomain = "ou=peaple,dc=example,dc=com"
  userSearchAttribute = "cn"
  userSearchReturnAttributes = "cn,sn,email"
  userSearchReturnArrayAttributes = "memberof"
}

userpass {
  passwordDifficulty {
    pattern = "PATTERN"
  }
  email {
    type = "TYPE"
    http {
      serviceUrl = "URL"
      serviceUsername = "USERNAME"
      servicePassword = "SECRET"
    }
    amqp {
      routing-key = "RK"
      exchange = "EX"
      buffer-size = 777
    }
  }
}

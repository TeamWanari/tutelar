hostname = "localhost"
hostname = ${?HOSTNAME}

configType = "conf"

conf {
  file = "runtime.conf"
}

database {
  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://localhost:5432/postgres?user=postgres&password=postgres"
  url = ${?DB_URL}
  numThreads = 5
  maximumPoolSize = 20
  connectionPool = "HikariCP"
}

mongo {
  uri = "mongodb://localhost/tutelar"
  uri = ${?DB_URI}
  collection = "users"
  collection = ${?DB_COLLECTION}
}

op-rabbit {
  topic-exchange-name = "amq.topic"
  topic-exchange-name = ${?RABBITMQ_TOPIC_EXCHANGE}
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-min = ${?RABBITMQ_MIN_THREAD}
      parallelism-factor = 2.0
      parallelism-factor = ${?RABBITMQ_THREAD_FACTOR}
      parallelism-max = 4
      parallelism-max = ${?RABBITMQ_MAX_THREAD}
    }
    throughput = 100
    throughput = ${?RABBITMQ_THROUGHPUT}
  }
  connection {
    virtual-host = "/"
    virtual-host = ${?RABBITMQ_VIRTUAL_HOST}
    hosts = ["127.0.0.1"] # TODO from env
    username = "guest"
    username = ${?RABBITMQ_USER}
    password = "guest"
    password = ${?RABBITMQ_PASS}
    port = 5672
    port = ${?RABBITMQ_PORT}
    ssl = false
    ssl = ${?RABBITMQ_SSL}
    connection-timeout = 3s
    connection-timeout = ${?RABBITMQ_TIMEOUT}
  }
}

// core modules: health, rabbitmq
// auth modules: basic, email, ldap, github, google, facebook, totp
modulesEnabled = "health,basic,email,ldap,github,google,facebook,totp"
modulesEnabled = ${?MODULES_ENABLED}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

rootUrl = "https://lvh.me:9443"
rootUrl = ${?ROOT_URL}

jwt {
  expirationTime: "1d"
  expirationTime: ${?JWT_EXPIRATION_TIME}
  // Symmetric: HMD5 | HS224 | HS256 | HS384 | HS512
  // Asymmetric: RS256 | RS384 | RS512 | ES256 | ES384 | ES512
  algorithm: "HS256"
  algorithm: ${?JWT_ALGORITHM}
  secret: "secret"
  secret: ${?JWT_SECRET}
  privateKey: ""
  privateKey: ${?JWT_PRIVATE_KEY}
  publicKey: ""
  publicKey: ${?JWT_PUBLIC_KEY}
}

callback {
  success: "https://lvh.me:9443/index.html?token=<<TOKEN>>"
  failure: "https://lvh.me:9443/index.html?error=<<ERROR>>"
}

oauth2 {

  facebook {
    clientId: ${?FACEBOOK_CLIENT_ID}
    clientSecret: ${?FACEBOOK_CLIENT_SECRET}
    scopes: "public_profile"
  }

  github {
    clientId: ${?GITHUB_CLIENT_ID}
    clientSecret: ${?GITHUB_CLIENT_SECRET}
    scopes: "read:user,gist"
  }

  google {
    clientId: ${?GOOGLE_CLIENT_ID}
    clientSecret: ${?GOOGLE_CLIENT_SECRET}
    scopes: "openid,email,profile"
  }

}

ldap {
  url = "ldap://localhost:389"
  url = ${?LDAP_URL}
  readonlyUserWithNamespace = "cn=readonly,dc=wanari,dc=com"
  readonlyUserWithNamespace = ${?LDAP_READONLY_USER_WITH_NAMESPACE}
  readonlyUserPassword = "readonly"
  readonlyUserPassword = ${?LDAP_READONLY_USER_PASSWORD}
  userSearchBaseDomain = "ou=users,dc=wanari,dc=com"
  userSearchBaseDomain = ${?LDAP_USER_SEARCH_BASE_DOMAIN}
  userSearchAttribute = "cn"
  userSearchAttribute = ${?LDAP_USER_SEARCH_ATTRIBUTE}
  userSearchReturnAttributes = "cn,sn,givenName"
  userSearchReturnAttributes = ${?LDAP_USER_SEARCH_RETURN_ATTRIBUTES}
  userSearchReturnArrayAttributes = "memberof"
  userSearchReturnArrayAttributes = ${?LDAP_USER_SEARCH_RETURN_ARRAY_ATTRIBUTES}
}

hook {
  // empty == hook module off
  baseUrl = ""
  baseUrl = ${?HOOK_BASE_PATH}

  // basic
  authType = "basic"
  authType = ${?HOOK_AUTH_TYPE}

  basicAuth {
    username = ""
    username = ${?HOOK_BASIC_USERNAME}
    password = ""
    password = ${?HOOK_BASIC_PASSWORD}
  }
}

email-http {
  serviceUrl: "http://localhost:9010"
  serviceUrl:  ${?EMAIL_SERVICE_URL}
  serviceUsername: ""
  serviceUsername: ${?EMAIL_SERVICE_USERNAME}
  servicePassword: "super_secret_123"
  servicePassword: ${?EMAIL_SERVICE_PASSWORD}
}

email-rabbit-mq {
  queue: "tutelar_email"
}

totp {
  algorithm: "SHA1" //MD5, SHA1, SHA256, SHA512
  window: 1
  period: 30s
  digits: 6
  startFromCurrentTime: false
}

passwordDifficulty {
  // Min 8 characters, at least one uppercase one lowercase letter and one number
  pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$"
  pattern: ${?PASSWORD_PATTERN}
}

database {
  // memory, postgres, mongo
  type: "memory"
  type: ${?DATABASE_TYPE}
}

tracer {
  client = "jaeger"
  client = ${?TRACER_CLIENT}
}

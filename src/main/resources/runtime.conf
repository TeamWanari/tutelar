oauth2 {
  rootUrl = "https://lvh.me:9443"
  rootUrl = ${?ROOT_URL}

  facebook {
    clientId = ${?FACEBOOK_CLIENT_ID}
    clientSecret = ${?FACEBOOK_CLIENT_SECRET}
    clientSecretFile = ${?FACEBOOK_CLIENT_SECRET_FILE}
    scopes = "public_profile"
  }

  github {
    clientId = ${?GITHUB_CLIENT_ID}
    clientSecret = ${?GITHUB_CLIENT_SECRET}
    clientSecretFile = ${?GITHUB_CLIENT_SECRET_FILE}
    scopes = "read:user,gist"
  }

  google {
    clientId = ${?GOOGLE_CLIENT_ID}
    clientSecret = ${?GOOGLE_CLIENT_SECRET}
    clientSecretFile = ${?GOOGLE_CLIENT_SECRET_FILE}
    scopes = "openid,email,profile"
  }

}

ldap {
  url = "ldap://localhost:389"
  url = ${?LDAP_URL}
  readonlyUserWithNamespace = "cn=readonly,dc=wanari,dc=com"
  readonlyUserWithNamespace = ${?LDAP_READONLY_USER_WITH_NAMESPACE}
  readonlyUserPassword = "readonly"
  readonlyUserPassword = ${?LDAP_READONLY_USER_PASSWORD}
  readonlyUserPasswordFile = ${?LDAP_READONLY_USER_PASSWORD_FILE}
  userSearchBaseDomain = "ou=users,dc=wanari,dc=com"
  userSearchBaseDomain = ${?LDAP_USER_SEARCH_BASE_DOMAIN}
  userSearchAttribute = "cn"
  userSearchAttribute = ${?LDAP_USER_SEARCH_ATTRIBUTE}
  userSearchReturnAttributes = "cn,sn,givenName"
  userSearchReturnAttributes = ${?LDAP_USER_SEARCH_RETURN_ATTRIBUTES}
  userSearchReturnArrayAttributes = "memberof"
  userSearchReturnArrayAttributes = ${?LDAP_USER_SEARCH_RETURN_ARRAY_ATTRIBUTES}
}

userpass {
  passwordDifficulty {
    // Min 8 characters, at least one uppercase one lowercase letter and one number
    pattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$"
    pattern = ${?PASSWORD_PATTERN}
  }

  email {
    // http, amqp
    type = "http"
    type = ${?EMAIL_SERVICE_TYPE}

    http {
      serviceUrl = "http://localhost:9010"
      serviceUrl =  ${?EMAIL_SERVICE_URL}
      serviceUsername = ""
      serviceUsername = ${?EMAIL_SERVICE_USERNAME}
      servicePassword = "super_secret_123"
      servicePassword = ${?EMAIL_SERVICE_PASSWORD}
      servicePasswordFile = ${?EMAIL_SERVICE_PASSWORD_FILE}
    }

    amqp {
      routing-key = "tutelar_email"
      routing-key = ${?EMAIL_SERVICE_AMQP_ROUTING_KEY}
      exchange = "amq.topic"
      exchange = ${?EMAIL_SERVICE_AMQP_EXCHANGE}
      buffer-size = 100
      buffer-size = ${?EMAIL_SERVICE_AMQP_BUFFER_SIZE}
    }
  }
}

totp {
  algorithm = "SHA1" //MD5, SHA1, SHA256, SHA512
  window = 1
  period = 30s
  digits = 6
  startFromCurrentTime = false
}
